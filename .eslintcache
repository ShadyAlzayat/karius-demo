[{"/Users/dev/alzayat/Desktop/karius-demo/src/index.tsx":"1","/Users/dev/alzayat/Desktop/karius-demo/src/serviceWorker.ts":"2","/Users/dev/alzayat/Desktop/karius-demo/src/App.tsx":"3","/Users/dev/alzayat/Desktop/karius-demo/src/redux/store.js":"4","/Users/dev/alzayat/Desktop/karius-demo/src/pages/Page.tsx":"5","/Users/dev/alzayat/Desktop/karius-demo/src/configs/firebase.js":"6","/Users/dev/alzayat/Desktop/karius-demo/src/redux/sequences/reducer.js":"7","/Users/dev/alzayat/Desktop/karius-demo/src/components/Menu/index.tsx":"8","/Users/dev/alzayat/Desktop/karius-demo/src/redux/sequences/actions.js":"9","/Users/dev/alzayat/Desktop/karius-demo/src/components/SequenceContainer/SequenceContainer.tsx":"10","/Users/dev/alzayat/Desktop/karius-demo/src/components/modals/SequenceModal/SequenceModal.tsx":"11"},{"size":430,"mtime":1610584369868,"results":"12","hashOfConfig":"13"},{"size":5213,"mtime":1610584369878,"results":"14","hashOfConfig":"13"},{"size":1649,"mtime":1610584801873,"results":"15","hashOfConfig":"13"},{"size":1104,"mtime":1610584369877,"results":"16","hashOfConfig":"13"},{"size":917,"mtime":1610584369871,"results":"17","hashOfConfig":"13"},{"size":890,"mtime":1610584369868,"results":"18","hashOfConfig":"13"},{"size":270,"mtime":1610584369876,"results":"19","hashOfConfig":"13"},{"size":1643,"mtime":1610584369860,"results":"20","hashOfConfig":"13"},{"size":1660,"mtime":1610584369875,"results":"21","hashOfConfig":"13"},{"size":4886,"mtime":1610585863115,"results":"22","hashOfConfig":"13"},{"size":5137,"mtime":1610584369864,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1s8wk45",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"/Users/dev/alzayat/Desktop/karius-demo/src/index.tsx",[],["49","50"],"/Users/dev/alzayat/Desktop/karius-demo/src/serviceWorker.ts",[],"/Users/dev/alzayat/Desktop/karius-demo/src/App.tsx",[],"/Users/dev/alzayat/Desktop/karius-demo/src/redux/store.js",[],["51","52"],"/Users/dev/alzayat/Desktop/karius-demo/src/pages/Page.tsx",[],"/Users/dev/alzayat/Desktop/karius-demo/src/configs/firebase.js",[],"/Users/dev/alzayat/Desktop/karius-demo/src/redux/sequences/reducer.js",[],"/Users/dev/alzayat/Desktop/karius-demo/src/components/Menu/index.tsx",[],"/Users/dev/alzayat/Desktop/karius-demo/src/redux/sequences/actions.js",[],"/Users/dev/alzayat/Desktop/karius-demo/src/components/SequenceContainer/SequenceContainer.tsx",["53","54","55","56","57","58","59"],"/Users/dev/alzayat/Desktop/karius-demo/src/components/modals/SequenceModal/SequenceModal.tsx",["60","61","62","63","64","65","66","67"],"import {\n  IonButton,\n  IonContent,\n  IonFab,\n  IonFabButton,\n  IonHeader,\n  IonIcon,\n  IonInput,\n  IonItem,\n  IonItemDivider,\n  IonLabel,\n  IonList,\n  IonPage,\n  IonRow,\n  IonTitle,\n  IonToolbar,\n} from '@ionic/react';\nimport React, { useEffect, useState } from 'react';\nimport './SequenceModal.css';\nimport { useDispatch } from 'react-redux';\nimport { addSequence, editSequence } from '../../../redux/sequences/actions';\nimport { closeCircleOutline, save } from 'ionicons/icons';\n\ninterface ContainerProps {\n  setShowModal: any;\n  setEditState: any;\n  editState: any;\n}\n\nconst SequenceModal: React.FC<ContainerProps> = ({\n  setShowModal,\n  setEditState,\n  editState,\n}) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    editState?.date && setDraftSequence(editState);\n  }, []);\n  const [draftSequence, setDraftSequence] = useState({\n    sequence: String(),\n    pathogen: String(),\n    symptoms: String(),\n    viralFactor: String(),\n  });\n  const { sequence, pathogen, symptoms, viralFactor } = draftSequence;\n  const addDraftSequence = () => {\n    dispatch(addSequence(draftSequence));\n    setShowModal(false);\n  };\n  const editDraftSequence = () => {\n    dispatch(editSequence(draftSequence));\n    setShowModal(false);\n  };\n  const handleChosenFile = (file: any) => {\n    const handleFileRead = () => {\n      const content: any = fileReader.result;\n      const lines = content.split('\\n');\n      const parsedObject = {\n        sequence: String(),\n        pathogen: String(),\n        symptoms: String(),\n        viralFactor: String(),\n      };\n      lines.map((line: String) => {\n        if (line.substr(0, line.lastIndexOf(' ')).includes('sequence')) {\n          parsedObject.sequence = line.substr(line.lastIndexOf(' ') + 1);\n        } else if (line.substr(0, line.lastIndexOf(' ')).includes('pathogen')) {\n          parsedObject.pathogen = line.substr(line.lastIndexOf(' ') + 1);\n        } else if (line.substr(0, line.lastIndexOf(' ')).includes('symptoms')) {\n          parsedObject.symptoms = line.substr(line.lastIndexOf(' ') + 1);\n        } else if (\n          line.substr(0, line.lastIndexOf(' ')).includes('viral factor')\n        ) {\n          parsedObject.viralFactor = line.substr(line.lastIndexOf(' ') + 1);\n        }\n      });\n      setDraftSequence({ ...parsedObject });\n    };\n    const fileReader = new FileReader();\n    fileReader.onloadend = handleFileRead;\n    fileReader.readAsText(file);\n  };\n  return (\n    <IonContent>\n      <IonPage>\n        <IonHeader>\n          <IonToolbar>\n            <IonTitle>\n              {editState?.date ? 'Edit Sequence' : 'Add Sequence'}\n            </IonTitle>\n            <IonFab vertical='top' horizontal='end'>\n              <IonButton\n                color='white'\n                icon-only\n                onClick={() => {\n                  setShowModal(false);\n                  setEditState({});\n                }}\n              >\n                <IonIcon icon={closeCircleOutline} />\n              </IonButton>\n            </IonFab>\n          </IonToolbar>\n        </IonHeader>\n        <IonContent>\n          <IonList>\n            {!editState?.date && (\n              <IonItem>\n                <IonRow>\n                  <IonLabel position='fixed'>Text File</IonLabel>\n                </IonRow>\n                <IonRow>\n                  <input\n                    type='file'\n                    id='file'\n                    accept='.txt'\n                    onChange={(e: any) => {\n                      handleChosenFile(e.target.files[0]);\n                    }}\n                  ></input>\n                </IonRow>\n              </IonItem>\n            )}\n            <IonItem>\n              <IonLabel position='floating'>\n                Sequence <a>*</a>\n              </IonLabel>\n              <IonInput\n                value={sequence}\n                onIonChange={(e) =>\n                  setDraftSequence({\n                    ...draftSequence,\n                    sequence: e.detail.value!,\n                  })\n                }\n              ></IonInput>\n            </IonItem>\n            <IonItemDivider />\n\n            <IonItem>\n              <IonLabel position='floating'>\n                Pathogen <a>*</a>\n              </IonLabel>\n              <IonInput value={pathogen}></IonInput>\n            </IonItem>\n            <IonItemDivider />\n\n            <IonItem>\n              <IonLabel position='floating'>\n                Symptoms <a>*</a>\n              </IonLabel>\n              <IonInput value={symptoms}></IonInput>\n            </IonItem>\n            <IonItemDivider />\n\n            <IonItem>\n              <IonLabel position='floating'>\n                Viral Factor <a>*</a>\n              </IonLabel>\n              <IonInput value={viralFactor}></IonInput>\n            </IonItem>\n            <IonItemDivider />\n          </IonList>\n        </IonContent>\n        <IonButton\n          onClick={editState?.date ? editDraftSequence : addDraftSequence}\n          disabled={!sequence.length}\n        >\n          {editState?.date ? 'Save' : 'Add'}\n        </IonButton>\n      </IonPage>\n    </IonContent>\n  );\n};\n\nexport default SequenceModal;\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":3,"nodeType":"74","messageId":"75","endLine":2,"endColumn":12},{"ruleId":"72","severity":1,"message":"76","line":22,"column":15,"nodeType":"74","messageId":"75","endLine":22,"endColumn":33},{"ruleId":"72","severity":1,"message":"77","line":22,"column":35,"nodeType":"74","messageId":"75","endLine":22,"endColumn":47},{"ruleId":"78","severity":1,"message":"79","line":39,"column":54,"nodeType":"80","messageId":"81","endLine":39,"endColumn":61,"fix":"82"},{"ruleId":"83","severity":1,"message":"84","line":44,"column":6,"nodeType":"85","endLine":44,"endColumn":8,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":54,"column":52,"nodeType":"89","messageId":"90","endLine":54,"endColumn":54},{"ruleId":"83","severity":1,"message":"91","line":79,"column":6,"nodeType":"85","endLine":79,"endColumn":19,"suggestions":"92"},{"ruleId":"72","severity":1,"message":"93","line":5,"column":3,"nodeType":"74","messageId":"75","endLine":5,"endColumn":15},{"ruleId":"72","severity":1,"message":"94","line":22,"column":30,"nodeType":"74","messageId":"75","endLine":22,"endColumn":34},{"ruleId":"83","severity":1,"message":"95","line":38,"column":6,"nodeType":"85","endLine":38,"endColumn":8,"suggestions":"96"},{"ruleId":"87","severity":1,"message":"97","line":64,"column":32,"nodeType":"89","messageId":"98","endLine":64,"endColumn":34},{"ruleId":"99","severity":1,"message":"100","line":126,"column":26,"nodeType":"101","endLine":126,"endColumn":29},{"ruleId":"99","severity":1,"message":"100","line":142,"column":26,"nodeType":"101","endLine":142,"endColumn":29},{"ruleId":"99","severity":1,"message":"100","line":150,"column":26,"nodeType":"101","endLine":150,"endColumn":29},{"ruleId":"99","severity":1,"message":"100","line":158,"column":30,"nodeType":"101","endLine":158,"endColumn":33},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"@typescript-eslint/no-unused-vars","'IonButton' is defined but never used.","Identifier","unusedVar","'arrowForwardCircle' is defined but never used.","'pulseOutline' is defined but never used.","@typescript-eslint/no-array-constructor","The array literal notation [] is preferable.","CallExpression","useLiteral",{"range":"104","text":"105"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["106"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'sequences'. Either include it or remove the dependency array.",["107"],"'IonFabButton' is defined but never used.","'save' is defined but never used.","React Hook useEffect has a missing dependency: 'editState'. Either include it or remove the dependency array. If 'setDraftSequence' needs the current value of 'editState', you can also switch to useReducer instead of useState and read 'editState' in the reducer.",["108"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",[1084,1091],"[]",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [dispatch]",{"range":"115","text":"116"},"Update the dependencies array to be: [searchValue, sequences]",{"range":"117","text":"118"},"Update the dependencies array to be: [editState]",{"range":"119","text":"120"},[1184,1186],"[dispatch]",[2305,2318],"[searchValue, sequences]",[788,790],"[editState]"]